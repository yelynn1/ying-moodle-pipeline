{"version":3,"sources":["../src/dynamic_tabs.js"],"names":["SELECTORS","dynamicTabs","activeTab","allActiveTabs","tabContent","tabToggle","tabPane","forTabName","tabName","forTabId","init","on","tab","attr","length","loadTab","openTabFromHash","tabs","document","querySelector","openTab","getAttribute","classList","add","indicateNodeIsLoading","node","Templates","render","then","html","js","replaceNodeContents","catch","Notification","exception","getActiveTabName","element","getFirstTabName","dataset","additionalData","pendingPromise","Pending","tabdata","closest","wsData","reportid","id","tabjs","textContent","tabClass","JSON","stringify","data","javascript","template","parse","content","resolve","getTab","getTabPane","getElementById","hash","location","match","replace"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Dynamic Tabs UI element with AJAX loading of tabs content\n *\n * @module      core/dynamic_tabs\n * @copyright   2021 David Matamoros <davidmc@moodle.com> based on code from Marina Glancy\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport Pending from 'core/pending';\nimport {getContent} from 'core/local/repository/dynamic_tabs';\n\nconst SELECTORS = {\n    dynamicTabs: '.dynamictabs',\n    activeTab: '.dynamictabs .nav-link.active',\n    allActiveTabs: '.dynamictabs .nav-link[data-toggle=\"tab\"]:not(.disabled)',\n    tabContent: '.dynamictabs .tab-pane [data-tab-content]',\n    tabToggle: 'a[data-toggle=\"tab\"]',\n    tabPane: '.dynamictabs .tab-pane',\n};\n\nSELECTORS.forTabName = tabName => `.dynamictabs [data-tab-content=\"${tabName}\"]`;\nSELECTORS.forTabId = tabName => `.dynamictabs [data-toggle=\"tab\"][href=\"#${tabName}\"]`;\n\n/**\n * Initialises the tabs view on the page (only one tabs view per page is supported)\n */\nexport const init = () => {\n    // This code listens to Bootstrap event 'shown.bs.tab' which is triggered using JQuery and\n    // can not be converted yet to native events.\n    $(SELECTORS.tabToggle).on('shown.bs.tab', function() {\n        const tab = $($(this).attr('href'));\n        if (tab.length !== 1) {\n            return;\n        }\n        loadTab(tab.attr('id'));\n    });\n\n    if (!openTabFromHash()) {\n        const tabs = document.querySelector(SELECTORS.allActiveTabs);\n        if (tabs) {\n            openTab(tabs.getAttribute('aria-controls'));\n        } else {\n            // We may hide tabs if there is only one available, just load the contents of the first tab.\n            const tabPane = document.querySelector(SELECTORS.tabPane);\n            if (tabPane) {\n                tabPane.classList.add('active', 'show');\n                loadTab(tabPane.getAttribute('id'));\n            }\n        }\n    }\n};\n\n/**\n * Show \"loading\" template instead of a node\n *\n * @param {HTMLElement} node\n * @return {Promise}\n */\nconst indicateNodeIsLoading = (node) => {\n    return Templates.render('core/loading', {})\n        .then((html, js) => {\n            return Templates.replaceNodeContents(node, html, js);\n        }).catch(Notification.exception);\n};\n\n/**\n * Returns id/name of the currently active tab\n *\n * @return {String|null}\n */\nconst getActiveTabName = () => {\n    const element = document.querySelector(SELECTORS.activeTab);\n    return element?.getAttribute('aria-controls') || null;\n};\n\n/**\n * Returns the id/name of the first tab\n *\n * @return {String|null}\n */\nconst getFirstTabName = () => {\n    const element = document.querySelector(SELECTORS.tabContent);\n    return element?.dataset.tabContent || null;\n};\n\n/**\n * Loads contents of a tab using an AJAX request\n *\n * @param {String} tabName\n * @param {Object} additionalData additional data to pass to WS\n */\nconst loadTab = (tabName, additionalData = {}) => {\n    // If tabName is not specified find the active tab, or if is not defined, the first available tab.\n    tabName = tabName ?? getActiveTabName() ?? getFirstTabName();\n\n    const tab = document.querySelector(SELECTORS.forTabName(tabName));\n    if (!tab) {\n        return;\n    }\n\n    const pendingPromise = new Pending('core/dynamic_tabs:loadTab:' + tabName);\n    const tabdata = tab.closest(SELECTORS.dynamicTabs);\n    const wsData = {\n        'reportid': tabdata.dataset.reportid,\n        'id': tabdata.dataset.id,\n        ...additionalData\n    };\n    let tabjs = '';\n    tab.textContent = '';\n\n    indicateNodeIsLoading(tab)\n    .then(() => {\n        return getContent(tab.dataset.tabClass, JSON.stringify(wsData));\n    })\n    .then((data) => {\n        tabjs = data.javascript;\n        return Templates.render(data.template, JSON.parse(data.content));\n    })\n    .then((html, js) => {\n        return Templates.replaceNodeContents(tab, html, js + tabjs);\n    })\n    .then(() => {\n        pendingPromise.resolve();\n        return null;\n    })\n    .catch(Notification.exception);\n};\n\n/**\n * Return the tab given the tab name\n *\n * @param {String} tabName\n * @return {HTMLElement}\n */\nconst getTab = (tabName) => {\n    return document.querySelector(SELECTORS.forTabId(tabName));\n};\n\n/**\n * Return the tab pane given the tab name\n *\n * @param {String} tabName\n * @return {HTMLElement}\n */\nconst getTabPane = (tabName) => {\n    return document.getElementById(tabName);\n};\n\n/**\n * Open the tab on page load. If this script loads before theme_boost/tab we need to open tab ourselves\n *\n * @param {String} tabName\n * @return {Boolean}\n */\nconst openTab = (tabName) => {\n    const tab = getTab(tabName);\n    if (!tab) {\n        return false;\n    }\n\n    loadTab(tabName);\n    tab.classList.add('active');\n    getTabPane(tabName).classList.add('active', 'show');\n    return true;\n};\n\n/**\n * If there is a location hash that is the same as the tab name - open this tab.\n *\n * @return {Boolean}\n */\nconst openTabFromHash = () => {\n    const hash = document.location.hash;\n    if (hash.match(/^#\\w+$/g)) {\n        return openTab(hash.replace(/^#/g, ''));\n    }\n\n    return false;\n};\n"],"file":"dynamic_tabs.min.js"}