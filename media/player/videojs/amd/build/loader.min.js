define ("media_videojs/loader",["exports","core/ajax","core_filters/events","core/localstorage","core/notification","jquery"],function(a,b,c,d,e,f){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.setUp=void 0;b=g(b);d=g(d);e=g(e);f=g(f);var o="undefined"!=typeof window?window:"undefined"!=typeof self?self:"undefined"!=typeof global?global:{};function g(a){return a&&a.__esModule?a:{default:a}}function h(a,b){return n(a)||m(a,b)||k(a,b)||j()}function j(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function k(a,b){if(!a)return;if("string"==typeof a)return l(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);if("Object"===c&&a.constructor)c=a.constructor.name;if("Map"===c||"Set"===c)return Array.from(c);if("Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return l(a,b)}function l(a,b){if(null==b||b>a.length)b=a.length;for(var c=0,d=Array(b);c<b;c++){d[c]=a[c]}return d}function m(a,b){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(a)))return;var c=[],d=!0,e=!1,f=void 0;try{for(var g=a[Symbol.iterator](),h;!(d=(h=g.next()).done);d=!0){c.push(h.value);if(b&&c.length===b)break}}catch(a){e=!0;f=a}finally{try{if(!d&&null!=g["return"])g["return"]()}finally{if(e)throw f}}return c}function n(a){if(Array.isArray(a))return a}var p,q,r;a.setUp=function setUp(a){q=a;p=!0;s({detail:{nodes:document.body}});document.addEventListener(c.eventTypes.filterContentUpdated,s)};var s=function(a){var b=(0,f.default)(a.detail.nodes),c=".mediaplugin_videojs",d=t();b.find(c).addBack(c).find("audio, video").each(function(a,b){var c=(0,f.default)(b).attr("id"),g=(0,f.default)(b).data("setup-lazy"),i=["function"==typeof o.define&&o.define.amd?new Promise(function(a,b){o.require(["media_videojs/video-lazy"],a,b)}):"undefined"!=typeof module&&module.exports&&"undefined"!=typeof require||"undefined"!=typeof module&&module.component&&o.require&&"component"===o.require.loader?Promise.resolve(require(("media_videojs/video-lazy"))):Promise.resolve(o["media_videojs/video-lazy"])];if(g.techOrder&&-1!==g.techOrder.indexOf("youtube")){i.push("function"==typeof o.define&&o.define.amd?new Promise(function(a,b){o.require(["media_videojs/Youtube-lazy"],a,b)}):"undefined"!=typeof module&&module.exports&&"undefined"!=typeof require||"undefined"!=typeof module&&module.component&&o.require&&"component"===o.require.loader?Promise.resolve(require(("media_videojs/Youtube-lazy"))):Promise.resolve(o["media_videojs/Youtube-lazy"]))}Promise.all([d].concat(i)).then(function(a){var b=h(a,2),d=b[0],e=b[1];if(p){e.options.playbackRates=[.5,.75,1,1.25,1.5,1.75,2];e.options.userActions={hotkeys:!0};e.addLanguage(q,d);p=!1}e(c,g)}).catch(e.default.exception)})},t=function(){if(r){return Promise.resolve(r)}var a="media_videojs/".concat(q),c=d.default.get(a);if(c){var f=JSON.parse(c);r=f;return Promise.resolve(r)}var e={methodname:"media_videojs_get_language",args:{lang:q}};return b.default.call([e])[0].then(function(b){d.default.set(a,b);return b}).then(function(a){return JSON.parse(a)}).then(function(a){r=a;return a})}});
//# sourceMappingURL=loader.min.js.map
